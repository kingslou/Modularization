apply plugin: 'com.android.application'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    buildFeatures {
        viewBinding = true
    }
    defaultConfig {
        applicationId "com.hengwei.wmssystem"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 100
        versionName "1.0.0"
        flavorDimensions "default"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        signingConfigs {
            debug {
                storeFile file('../hengwei.jks')
                storePassword '123456'
                keyPassword '123456'
                keyAlias = 'scanbar'
            }

            release {
                storeFile file('../hengwei.jks')
                storePassword '123456'
                keyPassword '123456'
                keyAlias = 'scanbar'
            }
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }


    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('-release.apk')) {
                        def fileName = "WMS_${defaultConfig.versionName}_C_${defaultConfig.versionCode}_${packTime()}-release.apk"
                        output.outputFileName = new File("apk_release", fileName)
                    }
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

static def packTime() {
    return new Date().format("yyyy-MM-dd_HHmmss", TimeZone.getTimeZone("Asia/Shanghai"))
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(path: ':commonLibary')
    implementation project(path: ':module_core')
    implementation project(path: ':componentManger')
    implementation project(path: ':module_login')
    implementation project(path: ':module_main')
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
}